table6 <- fread("./Euk_Bac_EC.csv")
library(data.table)
table6 <- fread("./Euk_Bac_EC.csv")
library(ggVennDiagram)
install.packages("ggVennDiagram")
table6 <- fread("./Euk_Bac_EC.csv")
library(ggVennDiagram)
x <- list("Eukaryota" = table6$CLEAN_EC[table6$superkingdom == "Eukaryota"],
"Bacteria" = table6$CLEAN_EC[table6$superkingdom != "Eukaryota"])
figure_1_b <- ggVennDiagram(x, lwd = 0.7) +
scale_fill_gradient(low = "#708FBA", high = "#D06D60") +
xlim(-10, 10) +
theme(legend.position = "none",
plot.margin = grid::unit(c(10, 0, 10, 0), "pt")
)
library(ggVennDiagram)
table6 <- fread("./Euk_Bac_EC.csv")
library(ggVennDiagram)
x <- list("Eukaryota" = table6$CLEAN_EC[table6$superkingdom == "Eukaryota"],
"Bacteria" = table6$CLEAN_EC[table6$superkingdom != "Eukaryota"])
figure_1_b <- ggVennDiagram(x, lwd = 0.7) +
scale_fill_gradient(low = "#708FBA", high = "#D06D60") +
xlim(-10, 10) +
theme(legend.position = "none",
plot.margin = grid::unit(c(10, 0, 10, 0), "pt")
)
library(ggplot)
library(ggplot2)
table6 <- fread("./Euk_Bac_EC.csv")
library(ggVennDiagram)
x <- list("Eukaryota" = table6$CLEAN_EC[table6$superkingdom == "Eukaryota"],
"Bacteria" = table6$CLEAN_EC[table6$superkingdom != "Eukaryota"])
figure_1_b <- ggVennDiagram(x, lwd = 0.7) +
scale_fill_gradient(low = "#708FBA", high = "#D06D60") +
xlim(-10, 10) +
theme(legend.position = "none",
plot.margin = grid::unit(c(10, 0, 10, 0), "pt")
)
figure_1_b
source_data_2 <- fread("./source_data_2.csv")
source_data_2_1|>count(how_know)
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
source_data_2 <- fread("./source_data_2.csv")
source_data_2_1|>count(how_know)
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
library(dplyr)
source_data_2 <- fread("./source_data_2.csv")
source_data_2_1|>count(how_know)
source_data_2_1 <- fread("./source_data_2.csv")
source_data_2_1|>count(how_know)
EC_table <- source_data_2_1 %>%
group_by(CLEAN_EC) %>%
summarise(
all_ref = n_distinct(cluster_id),
know = sum(labels == "known"),
noval = sum(labels == "unknown")
)
EC_table$EC1 <- EC_table$CLEAN_EC
EC_table <- EC_table %>%
separate(EC1, into = c("EC1_1", "EC1_2", "EC1_3", "EC1_4"), sep = "\\.")
EC_table$new_clu_pro <- EC_table$noval/EC_table$all_ref *100
EC_pie <- EC_table %>%
group_by(EC1_1) %>%
summarise(
count = n_distinct(CLEAN_EC),
know = n_distinct(CLEAN_EC[new_clu_pro == 0]),
noval = n_distinct(CLEAN_EC[new_clu_pro == 100]),
others = n_distinct(CLEAN_EC[new_clu_pro != 0 & new_clu_pro != 100])
)
EC_pie$EC1_1 <- c("EC_1","EC_2","EC_3","EC_4","EC_5","EC_6","EC_7")
EC_pie_long <- EC_pie %>%
pivot_longer(
cols = c(know,others,noval),
names_to = "variable",
values_to = "value"
)
source_data_2_1$'EC_A' <- lapply(source_data_2_1$CLEAN_EC,function(x){
return(stringr::str_split(x,"\\.")[1][[1]][1])
})|>unlist()
source_data_2_1$'EC_B' <- lapply(source_data_2_1$CLEAN_EC,function(x){
return(stringr::str_split(x,"\\.")[1][[1]][2])
})|>unlist()
source_data_2_1$'EC_A' <- paste0("EC: ",source_data_2_1$'EC_A')
source_data_2_1$EC_B <- paste0(source_data_2_1$'EC_A',".",source_data_2_1$'EC_B',"._._")
source_data_2_1 <- source_data_2_1[,"EC_cluster_sum":=length(unique(cluster_id)),by = "EC_B"]
source_data_2_1$'known' <- ifelse(source_data_2_1$how_know,1,0)
source_data_2_1 <- source_data_2_1[,"known_sum" := sum(known),by = "EC_B" ]
source_data_2_1$'unknown_sum' <- source_data_2_1$EC_cluster_sum-source_data_2_1$'known_sum'
source_data_2_1$unknown_per <- 1-(source_data_2_1$known_sum /source_data_2_1$EC_cluster_sum)
source_data_2_1$EC_B <- paste0(source_data_2_1$EC_B,"(",(source_data_2_1$unknown_per*100)|>round(2) ,"%)")
source_data_2_1 <- source_data_2_1[,"EC_A_known_sum" := sum(known),by = "EC_A" ]
source_data_2_1 <- source_data_2_1[,"EC_A_cluster_sum":=length(unique(cluster_id)),by = "EC_A"]
source_data_2_1$"EC_A_unknown_per" <-  1-(source_data_2_1$EC_A_known_sum /source_data_2_1$EC_A_cluster_sum)
source_data_2_1$"EC_A" <-  paste0(source_data_2_1$EC_A,"\n(",(source_data_2_1$EC_A_unknown_per*100)|>round(2) ,"%)")
colnames(source_data_2_1)
source_data_2_1_ex <- source_data_2_1[,c(7,9,14,17)]|>unique()
source_data_2_1_ex$EC_B <- source_data_2_1_ex$EC_B|>stringr::str_extract(".*(?=\\()")
source_data_2_1_ex <- source_data_2_1_ex|> arrange(EC_A, desc(unknown_per))
source_data_2_1_ex$EC_B <- factor(source_data_2_1_ex$EC_B,levels=rev(unique(source_data_2_1_ex$EC_B)))
colnames(source_data_2_1_ex)
source_data_2_3 <- source_data_2_1[,c(1,2,4:8)]
source_data_2_3$how_know <- ifelse(source_data_2_3$how_know,"known","unknown")
figure_2_a <- PieChart(labels ,data= source_data_2_1,
hole = 0.4,
labels_size=1,
color = "black",
fill = c( "#F4FAFE", "#4981BF"),
labels_color = c("#4981BF","#F4FAFE"),
main = NULL)
figure_2_a
library(ggsignif)
library(ggpubr)
library(patchwork)
figure_2_b <- ggplot(source_data_2_3,aes(x = how_know, y = cluster_members, fill = how_know))+
geom_violin(aes(fill = how_know),) +
geom_boxplot(fill = "white",width = 0.1,color="black")+
# stat_compare_means(method = "wilcox.test",label.x.npc = "middle",label.y.npc = "top",label = "p.signif")+
stat_compare_means(method = "wilcox.test",label.y = 3.5,label.x.npc = "left")+
# stat_compare_means(method = "wilcox.test",label.y.npc = "top")+
scale_fill_manual(values = c("#F4FAFE","#4981BF"))+
scale_y_log10()+
# coord_flip()+
xlab('') +
theme_classic()+
theme(legend.position = "none")
figure_2_c <- ggplot(source_data_2_1_ex, aes(x = unknown_per, y = EC_B, fill = EC_A)) +
geom_col(position = "dodge") +
geom_text(aes(label = paste0(round(unknown_per, 4) * 100, "%")),
position = position_dodge(0.85),
hjust = -0.2, size = 2) +
scale_x_continuous(limits = c(0, 1.05)) +
scale_fill_manual(values = ggsci::pal_simpsons("springfield")(7)) +
coord_flip() +
labs(x = "unknown rate", y = "EC_level2", fill = "EC_level1 (unknown rate)") +
theme_classic() +
theme()
source_data_3_1_1 <- read.csv("./source_data_3_1_1.csv")
figure_3_c <- ggplot(source_data_3_1_1, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = "grey70",type = "alluvial",width = 0.1,flow.color ="grey70") +
geom_sankey_text(aes(label = node), size = 4,color = 1, fill = "white",position = position_nudge(x = 0),type = "alluvial") +
scale_fill_manual(values = c("#D06D60","#708FBA","#F4FAFE","#4981BF",rep("#D06D60",10),rep("#708FBA",3)))+
theme_sankey(base_size = 11) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = .5))
library(ggsankey)
install.packages("ggsankey")
library(ggsankey)
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
library(ggsankey)
devtools::install_github("davidsjoberg/ggsankey")
library(ggsankey)
source_data_3_1_1 <- read.csv("./source_data_3_1_1.csv")
figure_3_c <- ggplot(source_data_3_1_1, aes(x = x,
next_x = next_x,
node = node,
next_node = next_node,
fill = node,
label = node)) +
geom_sankey(flow.alpha = 0.5, node.color = "grey70",type = "alluvial",width = 0.1,flow.color ="grey70") +
geom_sankey_text(aes(label = node), size = 4,color = 1, fill = "white",position = position_nudge(x = 0),type = "alluvial") +
scale_fill_manual(values = c("#D06D60","#708FBA","#F4FAFE","#4981BF",rep("#D06D60",10),rep("#708FBA",3)))+
theme_sankey(base_size = 11) +
theme(axis.title = element_blank(),
axis.text.x = element_blank(),
legend.position = "none",
plot.title = element_text(hjust = .5))
figure_3_c
figure_3_c
View(EC_pie)
source_data_4 <- read.csv("./source_data_4")
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
test1 <- fread("./cFMD_metadata.tsv")
test2 <- fread("./cFMD_sgbs_prokaryotic.tsv")
source_data_4 <- read.csv("./source_data_4.csv")
index0 <- readxl::read_xlsx("./country_2_contient.xlsx",col_names = F)|>data.table()
index0$country <- index0$...1|>stringr::str_sub(3,10)|>stringr::str_extract("[:graph:]*")
index0$continent <- lapply(index0$...1,function(x){
return(stringr::str_split(x,"\\|")[1][[1]][4])
})|>unlist()
index0$continent <- index0$continent |>stringr::str_extract("(?<= )[:graph:]*.*[[:graph:]]*")
index0$...1 <- c()
source_data_4$country[!source_data_4$country %in% index0$country]|>unique()
source_data_4 <- index0[source_data_4,on= c("country")]
source_data_4$continent[source_data_4$country %in% c("HKG","KOR")] <- "Asia"
source_data_4$continent[source_data_4$country %in% c("ALA")] <- "Europe"
source_data_4$continent[source_data_4$continent %in% c("Asia          ","Asia/Europe    ")] <- "Asia"
source_data_4$continent[source_data_4$continent %in% c("Europe/Asia   ","Europe        ")] <- "Europe"
source_data_4$continent[source_data_4$continent %in% c("Africa        ")] <- "Africa"
source_data_4$continent[source_data_4$continent %in% c("Oceania       ")] <- "Oceania"
library(ggpubr)
#pal_simpsons("springfield")(8)
figure_4_b_1 <- ggplot(source_data_4, aes(x=category,
y=cluster_div,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 4.45,size = 3) +
#stat_compare_means(method = "anova", label.y = 40)+ # Add global p-value
#stat_compare_means(aes(label = after_stat(p.signif)),
#                method = "t.test", ref.group = "0.5")+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_y_log10()+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(legend.position = "none")
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
library(ggpubr)
#pal_simpsons("springfield")(8)
figure_4_b_1 <- ggplot(source_data_4, aes(x=category,
y=cluster_div,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 4.45,size = 3) +
#stat_compare_means(method = "anova", label.y = 40)+ # Add global p-value
#stat_compare_means(aes(label = after_stat(p.signif)),
#                method = "t.test", ref.group = "0.5")+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_y_log10()+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(legend.position = "none")
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
library(gghalves)
library(ggsci)
library(EnvStats)
library(see)
library(patchwork)
library(ggpubr)
#pal_simpsons("springfield")(8)
figure_4_b_1 <- ggplot(source_data_4, aes(x=category,
y=cluster_div,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 4.45,size = 3) +
#stat_compare_means(method = "anova", label.y = 40)+ # Add global p-value
#stat_compare_means(aes(label = after_stat(p.signif)),
#                method = "t.test", ref.group = "0.5")+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_y_log10()+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(legend.position = "none")
figure_4_b_2 <- ggplot(source_data_4, aes(x=category,
y=unknown_per,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 1.25,size = 3) +
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(axis.text.y = element_blank())
figure_4_b_1|figure_4_b_2
source_data_4_5 <- source_data_4[,c(1,3,14:16)]|>unique()
source_data_4_5 <- read.csv("./source_data_4_5.csv")
colnames(source_data_4_5)
figure_4_c <-  ggscatter(source_data_4_5, x = "mag_div", y = "cluster_div",
color = "category",
size = 2, alpha = 0.6)+
stat_correlation(
mapping = use_label(c("R","P","method")),
method = "spearman",alternative = "two.sided",
small.r = F,small.p = T,size=3,r.digits = 3,
label.x = 7000)+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
facet_wrap(category~.,scales = "free_y",ncol = 3)+
theme(strip.text.y = element_blank(),
panel.grid.major.x = element_line(),
legend.position = "none")
library(ggpmisc)
figure_4_c <-  ggscatter(source_data_4_5, x = "mag_div", y = "cluster_div",
color = "category",
size = 2, alpha = 0.6)+
stat_correlation(
mapping = use_label(c("R","P","method")),
method = "spearman",alternative = "two.sided",
small.r = F,small.p = T,size=3,r.digits = 3,
label.x = 7000)+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
facet_wrap(category~.,scales = "free_y",ncol = 3)+
theme(strip.text.y = element_blank(),
panel.grid.major.x = element_line(),
legend.position = "none")
figure_4_c
rm(list = ls())
library(data.table)
library(ggplot2)
library(viridis)
library(lessR)
library(tidyr)
library(gghalves)
library(ggsci)
library(EnvStats)
library(see)
library(patchwork)
library(ggpmisc)
test1 <- fread("./cFMD_metadata.tsv")
test2 <- fread("./cFMD_sgbs_prokaryotic.tsv")
source_data_4 <- read.csv("./source_data_4.csv")
index0 <- readxl::read_xlsx("./country_2_contient.xlsx",col_names = F)|>data.table()
index0$country <- index0$...1|>stringr::str_sub(3,10)|>stringr::str_extract("[:graph:]*")
index0$continent <- lapply(index0$...1,function(x){
return(stringr::str_split(x,"\\|")[1][[1]][4])
})|>unlist()
index0$continent <- index0$continent |>stringr::str_extract("(?<= )[:graph:]*.*[[:graph:]]*")
index0$...1 <- c()
source_data_4$country[!source_data_4$country %in% index0$country]|>unique()
source_data_4 <- index0[source_data_4,on= c("country")]
source_data_4$continent[source_data_4$country %in% c("HKG","KOR")] <- "Asia"
source_data_4$continent[source_data_4$country %in% c("ALA")] <- "Europe"
source_data_4$continent[source_data_4$continent %in% c("Asia          ","Asia/Europe    ")] <- "Asia"
source_data_4$continent[source_data_4$continent %in% c("Europe/Asia   ","Europe        ")] <- "Europe"
source_data_4$continent[source_data_4$continent %in% c("Africa        ")] <- "Africa"
source_data_4$continent[source_data_4$continent %in% c("Oceania       ")] <- "Oceania"
library(ggpubr)
#pal_simpsons("springfield")(8)
figure_4_b_1 <- ggplot(source_data_4, aes(x=category,
y=cluster_div,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 4.45,size = 3) +
#stat_compare_means(method = "anova", label.y = 40)+ # Add global p-value
#stat_compare_means(aes(label = after_stat(p.signif)),
#                method = "t.test", ref.group = "0.5")+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_y_log10()+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(legend.position = "none")
figure_4_b_2 <- ggplot(source_data_4, aes(x=category,
y=unknown_per,
fill=continent)) +
# stat_boxplot(geom = "errorbar", width=0.3,linewidth=0.6)+
geom_boxplot(outlier.shape = 18,size=0.5)+
stat_n_text(y.pos = 1.25,size = 3) +
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
scale_fill_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
coord_flip()+
theme_classic()+
labs(x = "") +
theme(axis.text.y = element_blank())
figure_4_b_1|figure_4_b_2
source_data_4_5 <- read.csv("./source_data_4_5.csv")
colnames(source_data_4_5)
figure_4_c <-  ggscatter(source_data_4_5, x = "mag_div", y = "cluster_div",
color = "category",
size = 2, alpha = 0.6)+
stat_correlation(
mapping = use_label(c("R","P","method")),
method = "spearman",alternative = "two.sided",
small.r = F,small.p = T,size=3,r.digits = 3,
label.x = 7000)+
scale_color_manual(values=c("#FED439FF","#709AE1FF","#8A9197FF","#D2AF81FF",
"#FD7446FF","#D5E4A2FF","#197EC0FF","#F05C3BFF"))+
facet_wrap(category~.,scales = "free_y",ncol = 3)+
theme(strip.text.y = element_blank(),
panel.grid.major.x = element_line(),
legend.position = "none")
figure_4_c
??separate
